buildscript {
    apply from: 'gradle/buildscript.gradle', to: buildscript
}

//allprojects {
//    apply plugin: 'java'
//}
//
//dependencies {
//    compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.moxy'
//}
//
///**
// * Subproject configurations
// */
//
//subprojects {
//    version = rootProject.version
//
//    apply plugin: 'java'
//    apply plugin: 'nebula.optional-base'
//    
//    apply from: "$rootDir/gradle/jacoco.gradle"
//    apply from: "$rootDir/gradle/publishing.gradle"
//    apply from: "$rootDir/gradle/dependencies.gradle"
//    
//    dependencies {
//        compile group: 'org.eclipse.persistence', name: 'org.eclipse.persistence.moxy'
//        testCompile 'javax.mail:mail'
//        testCompile('org.junit.platform:junit-platform-launcher')
//    }
//}
//
//task wrapper(type: Wrapper) {
//    gradleVersion = gradleWrapperVersion
//}
//
//

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'io.spring.dependency-management'



    def repos = [
            'https://mymavenrepo.com/repo/Bwb7CZ1J9Ud5KCkBvnhI',
            'http://repo.spring.io/snapshot',
            "http://repo.spring.io/libs-milestone",
            "http://oss.sonatype.org/content/repositories/snapshots"
    ]




    task sourceJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    repositories {
        mavenLocal()
        mavenCentral()

        maven {
            url mavenRepositoryUrl

            credentials {
                username mavenRepositoryUsername
                password mavenRepositoryPassword
            }
        }
        repos.each { repo ->
            maven { url "$repo" }
        }
    }

    dependencyManagement {
        imports {
            mavenBom("io.sunshower.base:bom-imported:${version}") {
                bomProperties([
                        'env.version': '1.0.0.Final'
                ])
            }
        }
    }

    plugins.withType(JavaPlugin) {
        dependencies {
            compile 'javax.ws.rs:javax.ws.rs-api'
            compile 'org.eclipse.persistence:org.eclipse.persistence.moxy'
            compile 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api'


            testCompile 'javax.mail:mail'
            testCompile('org.mockito:mockito-core')
            testCompile('org.junit.platform:junit-platform-launcher')
            testCompile('org.junit.platform:junit-platform-commons')
            testCompile('org.junit.jupiter:junit-jupiter-engine')
            testCompile('org.junit.vintage:junit-vintage-engine')
        }
    }


    publishing {
        repositories {
            maven {
                url mavenRepositoryUrl

                credentials {
                    username mavenRepositoryUsername
                    password mavenRepositoryPassword
                }
            }
        }

        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }
            }
        }
    }

}
