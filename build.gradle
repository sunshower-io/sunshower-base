buildscript {
    apply from: 'gradle/buildscript.gradle', to: buildscript
    dependencies {
        classpath "net.ltgt.gradle:gradle-apt-plugin:0.18"
    }

}

plugins {
    id 'java-library'
}

apply plugin: 'nebula-aggregate-javadocs'


task archiveReports(type: Zip) {
    from "$buildDir/docs"
    include "/**/*"

    from "$buildDir/reports/clover"

    archiveName 'reports.zip'
}

allprojects {


    apply plugin: 'java'
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'maven-publish'
    apply plugin: 'net.ltgt.apt'
    apply plugin: 'project-report'
    apply plugin: 'com.bmuschko.clover'
    apply plugin: "com.diffplug.gradle.spotless"
    apply plugin: 'io.spring.dependency-management'


    spotless {
        java {
            googleJavaFormat('1.5')
        }
    }

    clover {
        report {
            html = true
        }
    }


    def repos = [
            'http://artifacts.sunshower.io/repository/sunshower-cache'
    ]


    task testArtifact(type: Jar, dependsOn: testClasses) {
        classifier = 'tests'
        from sourceSets.test.output
    }


    task sourceJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }


    dependencies {
        clover 'org.openclover:clover:4.2.0'
    }

    repositories {
        mavenLocal()
        repos.each { repo ->
            maven {
                url "$repo"
                credentials {
                    username mavenRepositoryUsername
                    password mavenRepositoryPassword
                }
            }
        }
    }

    dependencyManagement {
        imports {
            mavenBom("io.sunshower.base:bom-imported:${version}")
        }
    }

    plugins.withType(JavaPlugin) {

        dependencies {
            annotationProcessor "org.projectlombok:lombok"
            compileOnly 'org.projectlombok:lombok'
            testCompileOnly 'org.projectlombok:lombok'
            implementation 'javax.ws.rs:javax.ws.rs-api'
            implementation 'org.eclipse.persistence:org.eclipse.persistence.moxy'
            implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api'


            testCompile 'javax.mail:mail'
            testCompile('org.mockito:mockito-core')
            testCompile('org.junit.platform:junit-platform-launcher')
            testCompile('org.junit.platform:junit-platform-commons')
            testCompile('org.junit.jupiter:junit-jupiter-engine')

        }
    }


    publishing {
        repositories {
            maven {
                url mavenRepositoryUrl

                credentials {
                    username mavenRepositoryUsername
                    password mavenRepositoryPassword
                }
            }
        }

        publications {
            maven(MavenPublication) {
                from components.java

                artifact sourceJar {
                    classifier "sources"
                }

                artifact testArtifact {
                    classifier = 'tests'
                }
            }
        }
    }

    test {
        useJUnitPlatform {
            includeEngines 'junit-jupiter'
        }
    }

}


publishing {
    repositories {
        maven {
            url mavenRepositoryUrl

            credentials {
                username mavenRepositoryUsername
                password mavenRepositoryPassword
            }
        }
    }

    publications {
        maven(MavenPublication) {
            artifact archiveReports {
                classifier 'reports'
            }
        }
    }
}


assemble.dependsOn cloverAggregateReports
//assemble.dependsOn 'aggregateJavadocs'

assemble.dependsOn archiveReports
archiveReports.mustRunAfter cloverAggregateReports
//archiveReports.mustRunAfter 'aggregateJavadocs'


defaultTasks 'clean', 'build', 'cloverAggregateReports'

